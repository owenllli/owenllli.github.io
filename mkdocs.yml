site_name: 鲤鱼的小站
#site_url: https://owenllli.github.io/ #本地运行时注释掉
nav: # 配置网页体系
  - 首页: index.md
  - 博客:
      - blog/index.md
      #- blog/authos.md # 作者信息页,如有即可设置
      - 博客测试页面: blog/posts/blogSample.md
  - 语言:
      - language/index.md
      - Markdown 基本语法:
          - language/markdown/index.md
          - 警示块: language/markdown/admonitions.md
          - 注解: language/markdown/annotations.md
          - 按钮: language/markdown/buttons.md
          - 代码块: language/markdown/code-blocks.md
          - 选项卡: language/markdown/content-tabs.md
          - 数据表: language/markdown/data-tables.md
          - 图表: language/markdown/diagrams.md
          - 脚注: language/markdown/footnotes.md
          - 设置格式: language/markdown/formatting.md
          - 网格: language/markdown/grid.md
          - 图标和表情: language/markdown/icons-and-emojis.md
          - 图片: language/markdown/images.md
          - 列表: language/markdown/lists.md
          - 数学功能: language/markdown/math.md
          - 提示信息: language/markdown/tooltips.md
      - C/C++:
          - language/candcpp/index.md
          - 上机备份: language/candcpp/codebackup.md
  - 标签页: tags.md
theme:
  name: material #主题设置
  #repo_url: https://github.com/owenllli/owenllli.github.io
  #repo_name: 个人站点
  custom_dir: overrides # 主题扩展(覆写)文件夹
  icon:
    logo: material/library #后续可更换一个自己的logo，现在使用的是默认的样例logo
    #favicon: images/favicon.png #网页标签栏显示的图标，后续进行更换即可
    #annotation: material/plus-circle # 注解的图标，可自行更改
  language: zh #设置语言为简体中文
  palette:
    # 浅色模式
    - #根据用户系统设置自动切换模式
      media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        #图标，这里直接使用内嵌的图标库，也可以使用内联svg(?)或自定义图标
        icon: material/toggle-switch-off-outline
        name: 切换到夜间模式
      primary: teal # 顶部导航栏颜色
      accent: green #可交互元素颜色(如悬停时的颜色)
    # 深色模式
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/toggle-switch
        name: 切换到日间模式
      primary: black
      accent: light blue
  features:
    - navifation.instant # 即时加载
    - navifation.instant.progress # 页面加载进度条
    - navifation.tracking # 锚点跟踪
    - navigation.tabs # 宽度适合时在上方显示导航栏
    #- navigation.tabs.sticky # 导航栏常驻
    #- navigation.sections # 左侧导航标签分组
    #- navigation.expand # 左侧导航栏自动展开
    #- navigation.path # Insiders Only, 在上方显示当前导航所在目录
    - navigation.prune # 导航精简，减少构建网页时的消耗
    #- navigation.indexes # (?)
    - toc.follow # (?)
    #- toc.integrate # 两侧的toc集成到左侧
    - navigation.top # 返回顶部按钮，仅在上划时出现
    - search.suggest # 搜索建议候选
    #- search.highlight # 搜索到的结果在打开的页面内高亮
    - search.share # (?)
    - header.autohide # header滚动时自动隐藏
    #- announce.dismiss # 通知可标记为已读并关闭
    - navigation.footer # 页脚增添上页下页功能
    #- content.tabs.link # 选项卡关联
    - content.code.annotate # 代码块注释支持
    - content.code.copy # 代码块全局显示复制按钮
    - content.tooltips # (?)
plugins:
  - blog: # 博客插件
      blog_dir: . # 更新默认博客目录为 /posts 下的内容
      blog_toc: true # (?)
      post_date_format: full # 更改文章的日期格式，与站点配置的语言有关
      #post_url_date_format: yyyy/MM/dd # 链接后缀 (?)
      #post_url_format: "{date}/{slug}" # 使用多种占位符组合你的文章URL
      #post_url_max_categories: 2 # 限制URL中使用的categories数量(如有)
      #post_slugify: # 使用此条配置更改生成 URL slug 的函数
      #post_slugify_separator: - # slug 生成时的分隔符
      #post_excerpt: optional # 文章摘要是否必需
      #post_excerpt_max_authors: 2 # 限制在文章摘要中显示的作者数量
      #post_excerpt_max_categories: 2 # 限制在文章摘要中显示的分类数量
      #post_excerpt_separator: <!-- more --> # 设置在生成文章摘要时要查找的内容分隔符,分隔符前面的内容被视为摘要
      post_readtime: true # 是否自动计算文章的阅读时间，并在文章摘要及完整文章中显示
      post_readtime_words_per_minute: 350 # 每分钟阅读多少个单词/汉字 (多语言如何兼容?)
      archive_name: 归档 #设置归档部分的标题 (?)
      #archive_date_format: yyyy # 更改归档页面标题的日期格式
      #archive_url_date_format: yyyy # 更改归档页面 URL 的日期格式
      #archive_url_format: "archive/{date}" # 更改生成归档页面 URL 时的格式字符串
      #archive_toc: true # (?)
      categories_name: 分类页 # 更改导航栏中添加的分类部分的标题
      #categories_url_format: "category/{slug}" # 更改生成分类页 URL 时使用的格式字符串
      #categories_slugify: # 更改将分类名称转换为 URL 兼容形式的函数
      #categories_slugify_separator: - # slug 生成时的分隔符
      #categories_sort_reverse: true # 分类按降序排列,默认 false 为升序排列
      categories_allowed: # 预先定义的分类列表
        # 文章引用不在此列表中的 categories 时会构建失败,分类可通过文章的 categories 元数据属性分配
        - Sample
        - Test
      # categories_pagination_per_page: 12 # Insiders Only,更改每个分类页上显示的文章数量 (?)
      #categories_toc: true # 在分类页上利用目录显示文章标题 (?)
      pagination_per_page: 12 # 更改每页显示的文章数量
      #pagination_url_format: "page/{page}" # 更改分页视图的 URL 格式字符串
      #pagination_format: "~2~" # 使用 paginate 模块通过特殊语法生成分页标记 (?)
      pagination_if_single_page: true # 当视图仅有一页时是否自动禁用分页
      #pagination_keep_content: true # 启用或禁用内容的持久性,例如,分页视图是否同时显示其包含视图的内容 (?)
      draft: true # 渲染草稿文章,默认不渲染
      draft_on_serve: false # 在预览站点时是否包含标记为草稿的文章
      draft_if_future_date: true # 自动将带有未来日期的文章标记为草稿,当到了指定的日期时,除非显示标记为草稿,否则就自动被构建发布
  #- group # 组插件 (?)
  #- info # 信息插件 (?)
  #- offline # 离线可用 (?)
  #- privacy: # 隐私插件(?)
  #enabled: !ENV [CI, false] # 本地构建时禁用插件
  - search: # 内置搜索插件
      lang: # 设置个语言会增加网页构建的js文件的大小,酌情设置
        - zh # 增加对简体中文的搜索支持
        - en # 增加对英文的搜索支持
      #jieba_dic: dic.txt.small # jieba库提供的中文文本分词字典
  #- social # TODO:生成自己网页的社交卡片
  - tags: # Hash Tags
      tags_file: tags.md # 设置标签页
  - git-revision-date-localized:
      enable_creation_date: true # 显示文档创建和最后更新时间
      type: datetime #显示格式
      #fallback_to_build_date: true # (?)
  # - rss: # Blog RSS 源
  #     match_path: blog/posts/.*
  #     date_from_meta:
  #       as_creation: date
  #     categories: # (?)
  #       - categories
  #       - tags
  #     comments_path: "#__comments" # (?)

extra:
  #alternate:
  #TODO:语言切换功能
  #参考https://squidfunk.github.io/mkdocs-material/setup/changing-the-language
  social:
    - icon: fontawesome/brands/bilibili
      link: https://space.bilibili.com/383910359
      name: Bilibili
    - icon: fontawesome/brands/github
      link: https://github.com/owenllli
      name: Github
    #- X/Twitter
    #- Patron
  scope: / # 在所有项目中共享用户级设置
  #consent: # cookie设置,详见https://squidfunk.github.io/mkdocs-material/setup/ensuring-data-privacy/
extra_css:
  - stylesheets/transition-light-dark.css # 浅色、深色模式切换过渡效果 (未实现)
  - stylesheets/footer-light.css # 浅色模式时的页脚颜色设置
extra_javascript:
  - javascripts/mathjax.js # MathJax 渲染支持
  - https://unpkg.com/mathjax@3/es5/tex-mml-chtml.js # MathJax 渲染支持
copyright: | # 版权声明
  Copyright &copy; 2024 - 2024 Owen Li. All Rights Reserved.<br>
  Code licensed under the <a href="https://opensource.org/license/MIT target="_blank" rel="noopener">MIT License</a>. Content licensed under <a href="https://creativecommons.org/licenses/by/4.0/deed.zh-hans" target="_blank" rel="noopener">CC BY 4.0</a>.
markdown_extensions: # 这部分直接抄的官方文档
  # Python Markdown
  - abbr
  - admonition
  - attr_list
  - def_list
  - footnotes
  - md_in_html
  - tables
  - toc:
      permalink: true
  # Python Markdown Extensions
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.blocks.caption
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.critic
  - pymdownx.details
  - pymdownx.emoji: # 忽略报错
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.snippets
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: # 忽略报错
            !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
      slugify: !!python/object/apply:pymdownx.slugs.slugify # 忽略报错
        kwds:
          case: lower
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde
